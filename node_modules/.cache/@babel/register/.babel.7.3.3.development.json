{
  "{\"sourceRoot\":\"/Users/namel/git/lance/test/serializer\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/namel/git/lance\",\"filename\":\"/Users/namel/git/lance/test/serializer/list.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/namel/git/lance\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/namel/git/lance/test/serializer",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/namel/git/lance",
      "filename": "/Users/namel/git/lance/test/serializer/list.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/namel/git/lance",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/namel/git/lance/test/serializer/list.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/namel/git/lance/test/serializer/list.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/namel/git/lance/test/serializer",
        "sourceFileName": "list.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _Serializer = _interopRequireDefault(require(\"../../src/serialize/Serializer\"));\n\nvar _Serializable2 = _interopRequireDefault(require(\"../../src/serialize/Serializable\"));\n\nvar _BaseTypes = _interopRequireDefault(require(\"../../src/serialize/BaseTypes\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar TestObject =\n/*#__PURE__*/\nfunction (_Serializable) {\n  _inherits(TestObject, _Serializable);\n\n  _createClass(TestObject, null, [{\n    key: \"netScheme\",\n    get: function get() {\n      return {\n        playerAges: {\n          type: _BaseTypes.default.TYPES.LIST,\n          itemType: _BaseTypes.default.TYPES.UINT8\n        }\n      };\n    }\n  }]);\n\n  function TestObject(playerAges) {\n    var _this;\n\n    _classCallCheck(this, TestObject);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TestObject).call(this));\n    _this.playerAges = playerAges;\n    return _this;\n  }\n\n  return TestObject;\n}(_Serializable2.default);\n\nvar serializer = new _Serializer.default();\nvar testObject = new TestObject([1, 2, 3]);\nserializer.registerClass(TestObject);\ntestObject.class = TestObject;\ndescribe('List serialization/deserialization', function () {\n  var serializedTestObject = null;\n  var deserializedTestObject = null;\n  describe('primitives', function () {\n    it('Serialize list', function () {\n      serializedTestObject = testObject.serialize(serializer);\n    });\n    it('Deserialize list', function () {\n      deserializedTestObject = serializer.deserialize(serializedTestObject.dataBuffer);\n      deserializedTestObject.byteOffset.should.equal(6);\n      deserializedTestObject.obj.playerAges.should.be.instanceof(Array).and.have.lengthOf(3);\n      deserializedTestObject.obj.playerAges[0].should.equal(1);\n      deserializedTestObject.obj.playerAges[1].should.equal(2);\n      deserializedTestObject.obj.playerAges[2].should.equal(3);\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3QuanMiXSwibmFtZXMiOlsiVGVzdE9iamVjdCIsInBsYXllckFnZXMiLCJ0eXBlIiwiQmFzZVR5cGVzIiwiVFlQRVMiLCJMSVNUIiwiaXRlbVR5cGUiLCJVSU5UOCIsIlNlcmlhbGl6YWJsZSIsInNlcmlhbGl6ZXIiLCJTZXJpYWxpemVyIiwidGVzdE9iamVjdCIsInJlZ2lzdGVyQ2xhc3MiLCJjbGFzcyIsImRlc2NyaWJlIiwic2VyaWFsaXplZFRlc3RPYmplY3QiLCJkZXNlcmlhbGl6ZWRUZXN0T2JqZWN0IiwiaXQiLCJzZXJpYWxpemUiLCJkZXNlcmlhbGl6ZSIsImRhdGFCdWZmZXIiLCJieXRlT2Zmc2V0Iiwic2hvdWxkIiwiZXF1YWwiLCJvYmoiLCJiZSIsImluc3RhbmNlb2YiLCJBcnJheSIsImFuZCIsImhhdmUiLCJsZW5ndGhPZiJdLCJtYXBwaW5ncyI6Ijs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUVNQSxVOzs7Ozs7O3dCQUVxQjtBQUNuQixhQUFPO0FBQ0hDLFFBQUFBLFVBQVUsRUFBRTtBQUNSQyxVQUFBQSxJQUFJLEVBQUVDLG1CQUFVQyxLQUFWLENBQWdCQyxJQURkO0FBRVJDLFVBQUFBLFFBQVEsRUFBRUgsbUJBQVVDLEtBQVYsQ0FBZ0JHO0FBRmxCO0FBRFQsT0FBUDtBQU1IOzs7QUFFRCxzQkFBWU4sVUFBWixFQUF3QjtBQUFBOztBQUFBOztBQUNwQjtBQUNBLFVBQUtBLFVBQUwsR0FBa0JBLFVBQWxCO0FBRm9CO0FBR3ZCOzs7RUFkb0JPLHNCOztBQWlCekIsSUFBSUMsVUFBVSxHQUFHLElBQUlDLG1CQUFKLEVBQWpCO0FBRUEsSUFBSUMsVUFBVSxHQUFHLElBQUlYLFVBQUosQ0FBZSxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxDQUFmLENBQWpCO0FBQ0FTLFVBQVUsQ0FBQ0csYUFBWCxDQUF5QlosVUFBekI7QUFDQVcsVUFBVSxDQUFDRSxLQUFYLEdBQW1CYixVQUFuQjtBQUVBYyxRQUFRLENBQUMsb0NBQUQsRUFBdUMsWUFBVztBQUN0RCxNQUFJQyxvQkFBb0IsR0FBRyxJQUEzQjtBQUNBLE1BQUlDLHNCQUFzQixHQUFHLElBQTdCO0FBRUFGLEVBQUFBLFFBQVEsQ0FBQyxZQUFELEVBQWUsWUFBVztBQUU5QkcsSUFBQUEsRUFBRSxDQUFDLGdCQUFELEVBQW1CLFlBQVc7QUFDNUJGLE1BQUFBLG9CQUFvQixHQUFHSixVQUFVLENBQUNPLFNBQVgsQ0FBcUJULFVBQXJCLENBQXZCO0FBRUgsS0FIQyxDQUFGO0FBS0FRLElBQUFBLEVBQUUsQ0FBQyxrQkFBRCxFQUFxQixZQUFXO0FBQzlCRCxNQUFBQSxzQkFBc0IsR0FBR1AsVUFBVSxDQUFDVSxXQUFYLENBQXVCSixvQkFBb0IsQ0FBQ0ssVUFBNUMsQ0FBekI7QUFDQUosTUFBQUEsc0JBQXNCLENBQUNLLFVBQXZCLENBQWtDQyxNQUFsQyxDQUF5Q0MsS0FBekMsQ0FBK0MsQ0FBL0M7QUFDQVAsTUFBQUEsc0JBQXNCLENBQUNRLEdBQXZCLENBQTJCdkIsVUFBM0IsQ0FBc0NxQixNQUF0QyxDQUE2Q0csRUFBN0MsQ0FBZ0RDLFVBQWhELENBQTJEQyxLQUEzRCxFQUFrRUMsR0FBbEUsQ0FBc0VDLElBQXRFLENBQTJFQyxRQUEzRSxDQUFvRixDQUFwRjtBQUNBZCxNQUFBQSxzQkFBc0IsQ0FBQ1EsR0FBdkIsQ0FBMkJ2QixVQUEzQixDQUFzQyxDQUF0QyxFQUF5Q3FCLE1BQXpDLENBQWdEQyxLQUFoRCxDQUFzRCxDQUF0RDtBQUNBUCxNQUFBQSxzQkFBc0IsQ0FBQ1EsR0FBdkIsQ0FBMkJ2QixVQUEzQixDQUFzQyxDQUF0QyxFQUF5Q3FCLE1BQXpDLENBQWdEQyxLQUFoRCxDQUFzRCxDQUF0RDtBQUNBUCxNQUFBQSxzQkFBc0IsQ0FBQ1EsR0FBdkIsQ0FBMkJ2QixVQUEzQixDQUFzQyxDQUF0QyxFQUF5Q3FCLE1BQXpDLENBQWdEQyxLQUFoRCxDQUFzRCxDQUF0RDtBQUNILEtBUEMsQ0FBRjtBQVNILEdBaEJPLENBQVI7QUFrQkgsQ0F0Qk8sQ0FBUiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbmFtZWwvZ2l0L2xhbmNlL3Rlc3Qvc2VyaWFsaXplciIsInNvdXJjZXNDb250ZW50IjpbIi8vIFNlcmlhbGl6ZXIgbXVzdCBiZSBsb2FkZWQgZmlyc3QgYmVmb3JlIFNlcmlhbGl6YWJsZSBiZWNhdXNlIG9mIGNpcmN1bGFyIGRlcHNcbmltcG9ydCBTZXJpYWxpemVyIGZyb20gJy4uLy4uL3NyYy9zZXJpYWxpemUvU2VyaWFsaXplcic7XG5pbXBvcnQgU2VyaWFsaXphYmxlIGZyb20gJy4uLy4uL3NyYy9zZXJpYWxpemUvU2VyaWFsaXphYmxlJztcbmltcG9ydCBCYXNlVHlwZXMgZnJvbSAnLi4vLi4vc3JjL3NlcmlhbGl6ZS9CYXNlVHlwZXMnO1xuXG5jbGFzcyBUZXN0T2JqZWN0IGV4dGVuZHMgU2VyaWFsaXphYmxlIHtcblxuICAgIHN0YXRpYyBnZXQgbmV0U2NoZW1lKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcGxheWVyQWdlczoge1xuICAgICAgICAgICAgICAgIHR5cGU6IEJhc2VUeXBlcy5UWVBFUy5MSVNULFxuICAgICAgICAgICAgICAgIGl0ZW1UeXBlOiBCYXNlVHlwZXMuVFlQRVMuVUlOVDhcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IocGxheWVyQWdlcykge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLnBsYXllckFnZXMgPSBwbGF5ZXJBZ2VzO1xuICAgIH1cbn1cblxudmFyIHNlcmlhbGl6ZXIgPSBuZXcgU2VyaWFsaXplcigpO1xuXG52YXIgdGVzdE9iamVjdCA9IG5ldyBUZXN0T2JqZWN0KFsxLCAyLCAzXSk7XG5zZXJpYWxpemVyLnJlZ2lzdGVyQ2xhc3MoVGVzdE9iamVjdCk7XG50ZXN0T2JqZWN0LmNsYXNzID0gVGVzdE9iamVjdDtcblxuZGVzY3JpYmUoJ0xpc3Qgc2VyaWFsaXphdGlvbi9kZXNlcmlhbGl6YXRpb24nLCBmdW5jdGlvbigpIHtcbiAgICBsZXQgc2VyaWFsaXplZFRlc3RPYmplY3QgPSBudWxsO1xuICAgIGxldCBkZXNlcmlhbGl6ZWRUZXN0T2JqZWN0ID0gbnVsbDtcblxuICAgIGRlc2NyaWJlKCdwcmltaXRpdmVzJywgZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgaXQoJ1NlcmlhbGl6ZSBsaXN0JywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBzZXJpYWxpemVkVGVzdE9iamVjdCA9IHRlc3RPYmplY3Quc2VyaWFsaXplKHNlcmlhbGl6ZXIpO1xuXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGl0KCdEZXNlcmlhbGl6ZSBsaXN0JywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBkZXNlcmlhbGl6ZWRUZXN0T2JqZWN0ID0gc2VyaWFsaXplci5kZXNlcmlhbGl6ZShzZXJpYWxpemVkVGVzdE9iamVjdC5kYXRhQnVmZmVyKTtcbiAgICAgICAgICAgIGRlc2VyaWFsaXplZFRlc3RPYmplY3QuYnl0ZU9mZnNldC5zaG91bGQuZXF1YWwoNik7XG4gICAgICAgICAgICBkZXNlcmlhbGl6ZWRUZXN0T2JqZWN0Lm9iai5wbGF5ZXJBZ2VzLnNob3VsZC5iZS5pbnN0YW5jZW9mKEFycmF5KS5hbmQuaGF2ZS5sZW5ndGhPZigzKTtcbiAgICAgICAgICAgIGRlc2VyaWFsaXplZFRlc3RPYmplY3Qub2JqLnBsYXllckFnZXNbMF0uc2hvdWxkLmVxdWFsKDEpO1xuICAgICAgICAgICAgZGVzZXJpYWxpemVkVGVzdE9iamVjdC5vYmoucGxheWVyQWdlc1sxXS5zaG91bGQuZXF1YWwoMik7XG4gICAgICAgICAgICBkZXNlcmlhbGl6ZWRUZXN0T2JqZWN0Lm9iai5wbGF5ZXJBZ2VzWzJdLnNob3VsZC5lcXVhbCgzKTtcbiAgICAgICAgfSk7XG5cbiAgICB9KTtcblxufSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "list.js"
      ],
      "names": [
        "TestObject",
        "playerAges",
        "type",
        "BaseTypes",
        "TYPES",
        "LIST",
        "itemType",
        "UINT8",
        "Serializable",
        "serializer",
        "Serializer",
        "testObject",
        "registerClass",
        "class",
        "describe",
        "serializedTestObject",
        "deserializedTestObject",
        "it",
        "serialize",
        "deserialize",
        "dataBuffer",
        "byteOffset",
        "should",
        "equal",
        "obj",
        "be",
        "instanceof",
        "Array",
        "and",
        "have",
        "lengthOf"
      ],
      "mappings": ";;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;IAEMA,U;;;;;;;wBAEqB;AACnB,aAAO;AACHC,QAAAA,UAAU,EAAE;AACRC,UAAAA,IAAI,EAAEC,mBAAUC,KAAV,CAAgBC,IADd;AAERC,UAAAA,QAAQ,EAAEH,mBAAUC,KAAV,CAAgBG;AAFlB;AADT,OAAP;AAMH;;;AAED,sBAAYN,UAAZ,EAAwB;AAAA;;AAAA;;AACpB;AACA,UAAKA,UAAL,GAAkBA,UAAlB;AAFoB;AAGvB;;;EAdoBO,sB;;AAiBzB,IAAIC,UAAU,GAAG,IAAIC,mBAAJ,EAAjB;AAEA,IAAIC,UAAU,GAAG,IAAIX,UAAJ,CAAe,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAf,CAAjB;AACAS,UAAU,CAACG,aAAX,CAAyBZ,UAAzB;AACAW,UAAU,CAACE,KAAX,GAAmBb,UAAnB;AAEAc,QAAQ,CAAC,oCAAD,EAAuC,YAAW;AACtD,MAAIC,oBAAoB,GAAG,IAA3B;AACA,MAAIC,sBAAsB,GAAG,IAA7B;AAEAF,EAAAA,QAAQ,CAAC,YAAD,EAAe,YAAW;AAE9BG,IAAAA,EAAE,CAAC,gBAAD,EAAmB,YAAW;AAC5BF,MAAAA,oBAAoB,GAAGJ,UAAU,CAACO,SAAX,CAAqBT,UAArB,CAAvB;AAEH,KAHC,CAAF;AAKAQ,IAAAA,EAAE,CAAC,kBAAD,EAAqB,YAAW;AAC9BD,MAAAA,sBAAsB,GAAGP,UAAU,CAACU,WAAX,CAAuBJ,oBAAoB,CAACK,UAA5C,CAAzB;AACAJ,MAAAA,sBAAsB,CAACK,UAAvB,CAAkCC,MAAlC,CAAyCC,KAAzC,CAA+C,CAA/C;AACAP,MAAAA,sBAAsB,CAACQ,GAAvB,CAA2BvB,UAA3B,CAAsCqB,MAAtC,CAA6CG,EAA7C,CAAgDC,UAAhD,CAA2DC,KAA3D,EAAkEC,GAAlE,CAAsEC,IAAtE,CAA2EC,QAA3E,CAAoF,CAApF;AACAd,MAAAA,sBAAsB,CAACQ,GAAvB,CAA2BvB,UAA3B,CAAsC,CAAtC,EAAyCqB,MAAzC,CAAgDC,KAAhD,CAAsD,CAAtD;AACAP,MAAAA,sBAAsB,CAACQ,GAAvB,CAA2BvB,UAA3B,CAAsC,CAAtC,EAAyCqB,MAAzC,CAAgDC,KAAhD,CAAsD,CAAtD;AACAP,MAAAA,sBAAsB,CAACQ,GAAvB,CAA2BvB,UAA3B,CAAsC,CAAtC,EAAyCqB,MAAzC,CAAgDC,KAAhD,CAAsD,CAAtD;AACH,KAPC,CAAF;AASH,GAhBO,CAAR;AAkBH,CAtBO,CAAR",
      "sourceRoot": "/Users/namel/git/lance/test/serializer",
      "sourcesContent": [
        "// Serializer must be loaded first before Serializable because of circular deps\nimport Serializer from '../../src/serialize/Serializer';\nimport Serializable from '../../src/serialize/Serializable';\nimport BaseTypes from '../../src/serialize/BaseTypes';\n\nclass TestObject extends Serializable {\n\n    static get netScheme() {\n        return {\n            playerAges: {\n                type: BaseTypes.TYPES.LIST,\n                itemType: BaseTypes.TYPES.UINT8\n            },\n        };\n    }\n\n    constructor(playerAges) {\n        super();\n        this.playerAges = playerAges;\n    }\n}\n\nvar serializer = new Serializer();\n\nvar testObject = new TestObject([1, 2, 3]);\nserializer.registerClass(TestObject);\ntestObject.class = TestObject;\n\ndescribe('List serialization/deserialization', function() {\n    let serializedTestObject = null;\n    let deserializedTestObject = null;\n\n    describe('primitives', function() {\n\n        it('Serialize list', function() {\n            serializedTestObject = testObject.serialize(serializer);\n\n        });\n\n        it('Deserialize list', function() {\n            deserializedTestObject = serializer.deserialize(serializedTestObject.dataBuffer);\n            deserializedTestObject.byteOffset.should.equal(6);\n            deserializedTestObject.obj.playerAges.should.be.instanceof(Array).and.have.lengthOf(3);\n            deserializedTestObject.obj.playerAges[0].should.equal(1);\n            deserializedTestObject.obj.playerAges[1].should.equal(2);\n            deserializedTestObject.obj.playerAges[2].should.equal(3);\n        });\n\n    });\n\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585905728986
  },
  "{\"sourceRoot\":\"/Users/namel/git/lance/src/serialize\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/namel/git/lance\",\"filename\":\"/Users/namel/git/lance/src/serialize/Serializer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/namel/git/lance\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/namel/git/lance/src/serialize",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/namel/git/lance",
      "filename": "/Users/namel/git/lance/src/serialize/Serializer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/namel/git/lance",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/namel/git/lance/src/serialize/Serializer.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/namel/git/lance/src/serialize/Serializer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/namel/git/lance/src/serialize",
        "sourceFileName": "Serializer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Utils = _interopRequireDefault(require(\"./../lib/Utils\"));\n\nvar _TwoVector = _interopRequireDefault(require(\"./TwoVector\"));\n\nvar _ThreeVector = _interopRequireDefault(require(\"./ThreeVector\"));\n\nvar _Quaternion = _interopRequireDefault(require(\"./Quaternion\"));\n\nvar _BaseTypes = _interopRequireDefault(require(\"./BaseTypes\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar MAX_UINT_16 = 0xFFFF;\n/**\n * The Serializer is responsible for serializing the game world and its\n * objects on the server, before they are sent to each client.  On the client side the\n * Serializer deserializes these objects.\n *\n */\n\nvar Serializer =\n/*#__PURE__*/\nfunction () {\n  function Serializer() {\n    _classCallCheck(this, Serializer);\n\n    this.registeredClasses = {};\n    this.customTypes = {};\n    this.registerClass(_TwoVector.default);\n    this.registerClass(_ThreeVector.default);\n    this.registerClass(_Quaternion.default);\n  }\n  /**\n   * Adds a custom primitive to the serializer instance.\n   * This will enable you to use it in an object's netScheme\n   * @param customType\n   */\n  // TODO: the function below is not used, and it is not clear what that\n  // first argument is supposed to be\n\n\n  _createClass(Serializer, [{\n    key: \"addCustomType\",\n    value: function addCustomType(customType) {\n      this.customTypes[customType.type] = customType;\n    }\n    /**\n     * Checks if type can be assigned by value.\n     * @param {String} type Type to Checks\n     * @return {Boolean} True if type can be assigned\n     */\n\n  }, {\n    key: \"registerClass\",\n\n    /**\n     * Registers a new class with the serializer, so it may be deserialized later\n     * @param {Function} classObj reference to the class (not an instance!)\n     * @param {String} classId Unit specifying a class ID\n     */\n    value: function registerClass(classObj, classId) {\n      // if no classId is specified, hash one from the class name\n      classId = classId ? classId : _Utils.default.hashStr(classObj.name);\n\n      if (this.registeredClasses[classId]) {\n        console.error(\"Serializer: accidental override of classId \".concat(classId, \" when registering class\"), classObj);\n      }\n\n      this.registeredClasses[classId] = classObj;\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(dataBuffer, byteOffset) {\n      byteOffset = byteOffset ? byteOffset : 0;\n      var localByteOffset = 0;\n      var dataView = new DataView(dataBuffer);\n      var objectClassId = dataView.getUint8(byteOffset + localByteOffset); // todo if classId is 0 - take care of dynamic serialization.\n\n      var objectClass = this.registeredClasses[objectClassId];\n\n      if (objectClass == null) {\n        console.error('Serializer: Found a class which was not registered.  Please use serializer.registerClass() to register all serialized classes.');\n      }\n\n      localByteOffset += Uint8Array.BYTES_PER_ELEMENT; // advance the byteOffset after the classId\n      // create de-referenced instance of the class. gameEngine and id will be 'tacked on' later at the sync strategies\n\n      var obj = new objectClass(null, {\n        id: null\n      });\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = Object.keys(objectClass.netScheme).sort()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var property = _step.value;\n          var read = this.readDataView(dataView, byteOffset + localByteOffset, objectClass.netScheme[property]);\n          obj[property] = read.data;\n          localByteOffset += read.bufferSize;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return {\n        obj: obj,\n        byteOffset: localByteOffset\n      };\n    }\n  }, {\n    key: \"writeDataView\",\n    value: function writeDataView(dataView, value, bufferOffset, netSchemProp) {\n      if (netSchemProp.type === _BaseTypes.default.TYPES.FLOAT32) {\n        dataView.setFloat32(bufferOffset, value);\n      } else if (netSchemProp.type === _BaseTypes.default.TYPES.INT32) {\n        dataView.setInt32(bufferOffset, value);\n      } else if (netSchemProp.type === _BaseTypes.default.TYPES.INT16) {\n        dataView.setInt16(bufferOffset, value);\n      } else if (netSchemProp.type === _BaseTypes.default.TYPES.INT8) {\n        dataView.setInt8(bufferOffset, value);\n      } else if (netSchemProp.type === _BaseTypes.default.TYPES.UINT8) {\n        dataView.setUint8(bufferOffset, value);\n      } else if (netSchemProp.type === _BaseTypes.default.TYPES.STRING) {\n        //   MAX_UINT_16 is a reserved (length) value which indicates string hasn't changed\n        if (value === null) {\n          dataView.setUint16(bufferOffset, MAX_UINT_16);\n        } else {\n          var strLen = value.length;\n          dataView.setUint16(bufferOffset, strLen);\n          var localBufferOffset = 2;\n\n          for (var i = 0; i < strLen; i++) {\n            dataView.setUint16(bufferOffset + localBufferOffset + i * 2, value.charCodeAt(i));\n          }\n        }\n      } else if (netSchemProp.type === _BaseTypes.default.TYPES.CLASSINSTANCE) {\n        value.serialize(this, {\n          dataBuffer: dataView.buffer,\n          bufferOffset: bufferOffset\n        });\n      } else if (netSchemProp.type === _BaseTypes.default.TYPES.LIST) {\n        var _localBufferOffset = 0; // a list is comprised of the number of items followed by the items\n\n        dataView.setUint16(bufferOffset + _localBufferOffset, value.length);\n        _localBufferOffset += Uint16Array.BYTES_PER_ELEMENT;\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = value[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var item = _step2.value;\n\n            // TODO: inelegant, currently doesn't support list of lists\n            if (netSchemProp.itemType === _BaseTypes.default.TYPES.CLASSINSTANCE) {\n              var serializedObj = item.serialize(this, {\n                dataBuffer: dataView.buffer,\n                bufferOffset: bufferOffset + _localBufferOffset\n              });\n              _localBufferOffset += serializedObj.bufferOffset;\n            } else if (netSchemProp.itemType === _BaseTypes.default.TYPES.STRING) {\n              //   MAX_UINT_16 is a reserved (length) value which indicates string hasn't changed\n              if (item === null) {\n                dataView.setUint16(bufferOffset + _localBufferOffset, MAX_UINT_16);\n                _localBufferOffset += Uint16Array.BYTES_PER_ELEMENT;\n              } else {\n                var _strLen = item.length;\n                dataView.setUint16(bufferOffset + _localBufferOffset, _strLen);\n                _localBufferOffset += Uint16Array.BYTES_PER_ELEMENT;\n\n                for (var _i = 0; _i < _strLen; _i++) {\n                  dataView.setUint16(bufferOffset + _localBufferOffset + _i * 2, item.charCodeAt(_i));\n                }\n\n                _localBufferOffset += Uint16Array.BYTES_PER_ELEMENT * _strLen;\n              }\n            } else {\n              this.writeDataView(dataView, item, bufferOffset + _localBufferOffset, {\n                type: netSchemProp.itemType\n              });\n              _localBufferOffset += this.getTypeByteSize(netSchemProp.itemType);\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      } else if (this.customTypes[netSchemProp.type]) {\n        // this is a custom data property which needs to define its own write method\n        this.customTypes[netSchemProp.type].writeDataView(dataView, value, bufferOffset);\n      } else {\n        console.error(\"No custom property \".concat(netSchemProp.type, \" found!\"));\n      }\n    }\n  }, {\n    key: \"readDataView\",\n    value: function readDataView(dataView, bufferOffset, netSchemProp) {\n      var data, bufferSize;\n\n      if (netSchemProp.type === _BaseTypes.default.TYPES.FLOAT32) {\n        data = dataView.getFloat32(bufferOffset);\n        bufferSize = this.getTypeByteSize(netSchemProp.type);\n      } else if (netSchemProp.type === _BaseTypes.default.TYPES.INT32) {\n        data = dataView.getInt32(bufferOffset);\n        bufferSize = this.getTypeByteSize(netSchemProp.type);\n      } else if (netSchemProp.type === _BaseTypes.default.TYPES.INT16) {\n        data = dataView.getInt16(bufferOffset);\n        bufferSize = this.getTypeByteSize(netSchemProp.type);\n      } else if (netSchemProp.type === _BaseTypes.default.TYPES.INT8) {\n        data = dataView.getInt8(bufferOffset);\n        bufferSize = this.getTypeByteSize(netSchemProp.type);\n      } else if (netSchemProp.type === _BaseTypes.default.TYPES.UINT8) {\n        data = dataView.getUint8(bufferOffset);\n        bufferSize = this.getTypeByteSize(netSchemProp.type);\n      } else if (netSchemProp.type === _BaseTypes.default.TYPES.STRING) {\n        var length = dataView.getUint16(bufferOffset);\n        var localBufferOffset = Uint16Array.BYTES_PER_ELEMENT;\n        bufferSize = localBufferOffset;\n\n        if (length === MAX_UINT_16) {\n          data = null;\n        } else {\n          var a = [];\n\n          for (var i = 0; i < length; i++) {\n            a[i] = dataView.getUint16(bufferOffset + localBufferOffset + i * 2);\n          }\n\n          data = String.fromCharCode.apply(null, a);\n          bufferSize += length * Uint16Array.BYTES_PER_ELEMENT;\n        }\n      } else if (netSchemProp.type === _BaseTypes.default.TYPES.CLASSINSTANCE) {\n        var deserializeData = this.deserialize(dataView.buffer, bufferOffset);\n        data = deserializeData.obj;\n        bufferSize = deserializeData.byteOffset;\n      } else if (netSchemProp.type === _BaseTypes.default.TYPES.LIST) {\n        var _localBufferOffset2 = 0;\n        var items = [];\n        var itemCount = dataView.getUint16(bufferOffset + _localBufferOffset2);\n        _localBufferOffset2 += Uint16Array.BYTES_PER_ELEMENT;\n\n        for (var x = 0; x < itemCount; x++) {\n          var read = this.readDataView(dataView, bufferOffset + _localBufferOffset2, {\n            type: netSchemProp.itemType\n          });\n          items.push(read.data);\n          _localBufferOffset2 += read.bufferSize;\n        }\n\n        data = items;\n        bufferSize = _localBufferOffset2;\n      } else if (this.customTypes[netSchemProp.type] != null) {\n        // this is a custom data property which needs to define its own read method\n        data = this.customTypes[netSchemProp.type].readDataView(dataView, bufferOffset);\n      } else {\n        console.error(\"No custom property \".concat(netSchemProp.type, \" found!\"));\n      }\n\n      return {\n        data: data,\n        bufferSize: bufferSize\n      };\n    }\n  }, {\n    key: \"getTypeByteSize\",\n    value: function getTypeByteSize(type) {\n      switch (type) {\n        case _BaseTypes.default.TYPES.FLOAT32:\n          {\n            return Float32Array.BYTES_PER_ELEMENT;\n          }\n\n        case _BaseTypes.default.TYPES.INT32:\n          {\n            return Int32Array.BYTES_PER_ELEMENT;\n          }\n\n        case _BaseTypes.default.TYPES.INT16:\n          {\n            return Int16Array.BYTES_PER_ELEMENT;\n          }\n\n        case _BaseTypes.default.TYPES.INT8:\n          {\n            return Int8Array.BYTES_PER_ELEMENT;\n          }\n\n        case _BaseTypes.default.TYPES.UINT8:\n          {\n            return Uint8Array.BYTES_PER_ELEMENT;\n          }\n        // not one of the basic properties\n\n        default:\n          {\n            if (type === undefined) {\n              throw 'netScheme property declared without type attribute!';\n            } else if (this.customTypes[type] === null) {\n              throw \"netScheme property \".concat(type, \" undefined! Did you forget to add it to the serializer?\");\n            } else {\n              return this.customTypes[type].BYTES_PER_ELEMENT;\n            }\n          }\n      }\n    }\n  }], [{\n    key: \"typeCanAssign\",\n    value: function typeCanAssign(type) {\n      return type !== _BaseTypes.default.TYPES.CLASSINSTANCE && type !== _BaseTypes.default.TYPES.LIST;\n    }\n  }]);\n\n  return Serializer;\n}();\n\nvar _default = Serializer;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Serializer.js"
      ],
      "names": [
        "MAX_UINT_16",
        "Serializer",
        "registeredClasses",
        "customTypes",
        "registerClass",
        "TwoVector",
        "ThreeVector",
        "Quaternion",
        "customType",
        "type",
        "classObj",
        "classId",
        "Utils",
        "hashStr",
        "name",
        "console",
        "error",
        "dataBuffer",
        "byteOffset",
        "localByteOffset",
        "dataView",
        "DataView",
        "objectClassId",
        "getUint8",
        "objectClass",
        "Uint8Array",
        "BYTES_PER_ELEMENT",
        "obj",
        "id",
        "Object",
        "keys",
        "netScheme",
        "sort",
        "property",
        "read",
        "readDataView",
        "data",
        "bufferSize",
        "value",
        "bufferOffset",
        "netSchemProp",
        "BaseTypes",
        "TYPES",
        "FLOAT32",
        "setFloat32",
        "INT32",
        "setInt32",
        "INT16",
        "setInt16",
        "INT8",
        "setInt8",
        "UINT8",
        "setUint8",
        "STRING",
        "setUint16",
        "strLen",
        "length",
        "localBufferOffset",
        "i",
        "charCodeAt",
        "CLASSINSTANCE",
        "serialize",
        "buffer",
        "LIST",
        "Uint16Array",
        "item",
        "itemType",
        "serializedObj",
        "writeDataView",
        "getTypeByteSize",
        "getFloat32",
        "getInt32",
        "getInt16",
        "getInt8",
        "getUint16",
        "a",
        "String",
        "fromCharCode",
        "apply",
        "deserializeData",
        "deserialize",
        "items",
        "itemCount",
        "x",
        "push",
        "Float32Array",
        "Int32Array",
        "Int16Array",
        "Int8Array",
        "undefined"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/namel/git/lance/src/serialize",
      "sourcesContent": [
        "import Utils from './../lib/Utils';\nimport TwoVector from './TwoVector';\nimport ThreeVector from './ThreeVector';\nimport Quaternion from './Quaternion';\nimport BaseTypes from './BaseTypes';\n\nconst MAX_UINT_16 = 0xFFFF;\n\n/**\n * The Serializer is responsible for serializing the game world and its\n * objects on the server, before they are sent to each client.  On the client side the\n * Serializer deserializes these objects.\n *\n */\nclass Serializer {\n\n    constructor() {\n        this.registeredClasses = {};\n        this.customTypes = {};\n        this.registerClass(TwoVector);\n        this.registerClass(ThreeVector);\n        this.registerClass(Quaternion);\n    }\n\n    /**\n     * Adds a custom primitive to the serializer instance.\n     * This will enable you to use it in an object's netScheme\n     * @param customType\n     */\n    // TODO: the function below is not used, and it is not clear what that\n    // first argument is supposed to be\n    addCustomType(customType) {\n        this.customTypes[customType.type] = customType;\n    }\n\n    /**\n     * Checks if type can be assigned by value.\n     * @param {String} type Type to Checks\n     * @return {Boolean} True if type can be assigned\n     */\n    static typeCanAssign(type) {\n        return type !== BaseTypes.TYPES.CLASSINSTANCE && type !== BaseTypes.TYPES.LIST;\n    }\n\n    /**\n     * Registers a new class with the serializer, so it may be deserialized later\n     * @param {Function} classObj reference to the class (not an instance!)\n     * @param {String} classId Unit specifying a class ID\n     */\n    registerClass(classObj, classId) {\n        // if no classId is specified, hash one from the class name\n        classId = classId ? classId : Utils.hashStr(classObj.name);\n        if (this.registeredClasses[classId]) {\n            console.error(`Serializer: accidental override of classId ${classId} when registering class`, classObj);\n        }\n\n        this.registeredClasses[classId] = classObj;\n    }\n\n    deserialize(dataBuffer, byteOffset) {\n        byteOffset = byteOffset ? byteOffset : 0;\n        let localByteOffset = 0;\n\n        let dataView = new DataView(dataBuffer);\n\n        let objectClassId = dataView.getUint8(byteOffset + localByteOffset);\n\n        // todo if classId is 0 - take care of dynamic serialization.\n        let objectClass = this.registeredClasses[objectClassId];\n        if (objectClass == null) {\n            console.error('Serializer: Found a class which was not registered.  Please use serializer.registerClass() to register all serialized classes.');\n        }\n\n        localByteOffset += Uint8Array.BYTES_PER_ELEMENT; // advance the byteOffset after the classId\n\n        // create de-referenced instance of the class. gameEngine and id will be 'tacked on' later at the sync strategies\n        let obj = new objectClass(null, { id: null });\n        for (let property of Object.keys(objectClass.netScheme).sort()) {\n            let read = this.readDataView(dataView, byteOffset + localByteOffset, objectClass.netScheme[property]);\n            obj[property] = read.data;\n            localByteOffset += read.bufferSize;\n        }\n\n        return { obj, byteOffset: localByteOffset };\n    }\n\n    writeDataView(dataView, value, bufferOffset, netSchemProp) {\n        if (netSchemProp.type === BaseTypes.TYPES.FLOAT32) {\n            dataView.setFloat32(bufferOffset, value);\n        } else if (netSchemProp.type === BaseTypes.TYPES.INT32) {\n            dataView.setInt32(bufferOffset, value);\n        } else if (netSchemProp.type === BaseTypes.TYPES.INT16) {\n            dataView.setInt16(bufferOffset, value);\n        } else if (netSchemProp.type === BaseTypes.TYPES.INT8) {\n            dataView.setInt8(bufferOffset, value);\n        } else if (netSchemProp.type === BaseTypes.TYPES.UINT8) {\n            dataView.setUint8(bufferOffset, value);\n        } else if (netSchemProp.type === BaseTypes.TYPES.STRING) {\n\n            //   MAX_UINT_16 is a reserved (length) value which indicates string hasn't changed\n            if (value === null) {\n                dataView.setUint16(bufferOffset, MAX_UINT_16);\n            } else {\n                let strLen = value.length;\n                dataView.setUint16(bufferOffset, strLen);\n                let localBufferOffset = 2;\n                for (let i = 0; i < strLen; i++)\n                    dataView.setUint16(bufferOffset + localBufferOffset + i * 2, value.charCodeAt(i));\n            }\n        } else if (netSchemProp.type === BaseTypes.TYPES.CLASSINSTANCE) {\n            value.serialize(this, {\n                dataBuffer: dataView.buffer,\n                bufferOffset: bufferOffset\n            });\n        } else if (netSchemProp.type === BaseTypes.TYPES.LIST) {\n            let localBufferOffset = 0;\n\n            // a list is comprised of the number of items followed by the items\n            dataView.setUint16(bufferOffset + localBufferOffset, value.length);\n            localBufferOffset += Uint16Array.BYTES_PER_ELEMENT;\n\n            for (let item of value) {\n                // TODO: inelegant, currently doesn't support list of lists\n                if (netSchemProp.itemType === BaseTypes.TYPES.CLASSINSTANCE) {\n                    let serializedObj = item.serialize(this, {\n                        dataBuffer: dataView.buffer,\n                        bufferOffset: bufferOffset + localBufferOffset\n                    });\n                    localBufferOffset += serializedObj.bufferOffset;\n                } else if (netSchemProp.itemType === BaseTypes.TYPES.STRING) {\n                    //   MAX_UINT_16 is a reserved (length) value which indicates string hasn't changed\n                    if (item === null) {\n                        dataView.setUint16(bufferOffset + localBufferOffset, MAX_UINT_16);\n                        localBufferOffset += Uint16Array.BYTES_PER_ELEMENT;\n                    } else {\n                        let strLen = item.length;\n                        dataView.setUint16(bufferOffset + localBufferOffset, strLen);\n                        localBufferOffset += Uint16Array.BYTES_PER_ELEMENT;\n                        for (let i = 0; i < strLen; i++)\n                            dataView.setUint16(bufferOffset + localBufferOffset + i * 2, item.charCodeAt(i));\n                        localBufferOffset += Uint16Array.BYTES_PER_ELEMENT * strLen;\n                    }\n                } else {\n                    this.writeDataView(dataView, item, bufferOffset + localBufferOffset, { type: netSchemProp.itemType });\n                    localBufferOffset += this.getTypeByteSize(netSchemProp.itemType);\n                }\n            }\n        } else if (this.customTypes[netSchemProp.type]) {\n            // this is a custom data property which needs to define its own write method\n            this.customTypes[netSchemProp.type].writeDataView(dataView, value, bufferOffset);\n        } else {\n            console.error(`No custom property ${netSchemProp.type} found!`);\n        }\n\n    }\n\n    readDataView(dataView, bufferOffset, netSchemProp) {\n        let data, bufferSize;\n\n        if (netSchemProp.type === BaseTypes.TYPES.FLOAT32) {\n            data = dataView.getFloat32(bufferOffset);\n            bufferSize = this.getTypeByteSize(netSchemProp.type);\n        } else if (netSchemProp.type === BaseTypes.TYPES.INT32) {\n            data = dataView.getInt32(bufferOffset);\n            bufferSize = this.getTypeByteSize(netSchemProp.type);\n        } else if (netSchemProp.type === BaseTypes.TYPES.INT16) {\n            data = dataView.getInt16(bufferOffset);\n            bufferSize = this.getTypeByteSize(netSchemProp.type);\n        } else if (netSchemProp.type === BaseTypes.TYPES.INT8) {\n            data = dataView.getInt8(bufferOffset);\n            bufferSize = this.getTypeByteSize(netSchemProp.type);\n        } else if (netSchemProp.type === BaseTypes.TYPES.UINT8) {\n            data = dataView.getUint8(bufferOffset);\n            bufferSize = this.getTypeByteSize(netSchemProp.type);\n        } else if (netSchemProp.type === BaseTypes.TYPES.STRING) {\n            let length = dataView.getUint16(bufferOffset);\n            let localBufferOffset = Uint16Array.BYTES_PER_ELEMENT;\n            bufferSize = localBufferOffset;\n            if (length === MAX_UINT_16) {\n                data = null;\n            } else {\n                let a = [];\n                for (let i = 0; i < length; i++)\n                    a[i] = dataView.getUint16(bufferOffset + localBufferOffset + i * 2);\n                data = String.fromCharCode.apply(null, a);\n                bufferSize += length * Uint16Array.BYTES_PER_ELEMENT;\n            }\n        } else if (netSchemProp.type === BaseTypes.TYPES.CLASSINSTANCE) {\n            var deserializeData = this.deserialize(dataView.buffer, bufferOffset);\n            data = deserializeData.obj;\n            bufferSize = deserializeData.byteOffset;\n        } else if (netSchemProp.type === BaseTypes.TYPES.LIST) {\n            let localBufferOffset = 0;\n\n            let items = [];\n            let itemCount = dataView.getUint16(bufferOffset + localBufferOffset);\n            localBufferOffset += Uint16Array.BYTES_PER_ELEMENT;\n\n            for (let x = 0; x < itemCount; x++) {\n                let read = this.readDataView(dataView, bufferOffset + localBufferOffset, { type: netSchemProp.itemType });\n                items.push(read.data);\n                localBufferOffset += read.bufferSize;\n            }\n\n            data = items;\n            bufferSize = localBufferOffset;\n        } else if (this.customTypes[netSchemProp.type] != null) {\n            // this is a custom data property which needs to define its own read method\n            data = this.customTypes[netSchemProp.type].readDataView(dataView, bufferOffset);\n        } else {\n            console.error(`No custom property ${netSchemProp.type} found!`);\n        }\n\n        return { data: data, bufferSize: bufferSize };\n    }\n\n    getTypeByteSize(type) {\n\n        switch (type) {\n        case BaseTypes.TYPES.FLOAT32: {\n            return Float32Array.BYTES_PER_ELEMENT;\n        }\n        case BaseTypes.TYPES.INT32: {\n            return Int32Array.BYTES_PER_ELEMENT;\n        }\n        case BaseTypes.TYPES.INT16: {\n            return Int16Array.BYTES_PER_ELEMENT;\n        }\n        case BaseTypes.TYPES.INT8: {\n            return Int8Array.BYTES_PER_ELEMENT;\n        }\n        case BaseTypes.TYPES.UINT8: {\n            return Uint8Array.BYTES_PER_ELEMENT;\n        }\n\n        // not one of the basic properties\n        default: {\n            if (type === undefined) {\n                throw 'netScheme property declared without type attribute!';\n            } else if (this.customTypes[type] === null) {\n                throw `netScheme property ${type} undefined! Did you forget to add it to the serializer?`;\n            } else {\n                return this.customTypes[type].BYTES_PER_ELEMENT;\n            }\n        }\n\n        }\n\n    }\n}\n\nexport default Serializer;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585905728976
  }
}